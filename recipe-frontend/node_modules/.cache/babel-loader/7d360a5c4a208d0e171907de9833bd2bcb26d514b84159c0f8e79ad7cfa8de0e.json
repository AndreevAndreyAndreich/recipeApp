{"ast":null,"code":"// src/api/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:3000';\nexport const getRecipes = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/recipes`);\n    return response.data;\n  } catch (err) {\n    console.error('Ошибка при получении рецептов:', err);\n    return [];\n  }\n};\n\n// Получение рекомендаций на основе избранных рецептов пользователя\nexport const getRecommendationsBasedOnFavorites = async userId => {\n  const response = await axios.get(`http://localhost:3000/users/${userId}/recommendations`);\n  return response.data;\n};\n\n// Добавление рецепта в избранное\nexport const addRecipeToFavorites = async (userId, recipeId) => {\n  try {\n    const response = await axios.post(`http://localhost:3000/users/${userId}/favorites`, {\n      recipeId\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Ошибка при добавлении в избранное:\", error);\n    throw error; // Прокидываем ошибку, чтобы она была обработана в вызывающем коде\n  }\n};\nexport const getUserRecommendations = async userId => {\n  const response = await axios.get(`http://localhost:3000/users/${userId}/recommendations`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getRecipes","response","get","data","err","console","error","getRecommendationsBasedOnFavorites","userId","addRecipeToFavorites","recipeId","post","getUserRecommendations"],"sources":["D:/recipeApp/recipe-frontend/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000';\r\n\r\nexport const getRecipes = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/recipes`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Ошибка при получении рецептов:', err);\r\n      return [];\r\n    }\r\n  };\r\n  \r\n// Получение рекомендаций на основе избранных рецептов пользователя\r\nexport const getRecommendationsBasedOnFavorites = async (userId) => {\r\n  const response = await axios.get(`http://localhost:3000/users/${userId}/recommendations`);\r\n  return response.data;\r\n};\r\n\r\n// Добавление рецепта в избранное\r\nexport const addRecipeToFavorites = async (userId, recipeId) => {\r\n  try {\r\n    const response = await axios.post(`http://localhost:3000/users/${userId}/favorites`, {\r\n      recipeId,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Ошибка при добавлении в избранное:\", error);\r\n    throw error; // Прокидываем ошибку, чтобы она была обработана в вызывающем коде\r\n  }\r\n};\r\n\r\n\r\nexport const getUserRecommendations = async (userId) => {\r\n  const response = await axios.get(`http://localhost:3000/users/${userId}/recommendations`);\r\n  return response.data;\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,UAAU,CAAC;IACtD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;IACpD,OAAO,EAAE;EACX;AACF,CAAC;;AAEH;AACA,OAAO,MAAMG,kCAAkC,GAAG,MAAOC,MAAM,IAAK;EAClE,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,+BAA+BM,MAAM,kBAAkB,CAAC;EACzF,OAAOP,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMM,oBAAoB,GAAG,MAAAA,CAAOD,MAAM,EAAEE,QAAQ,KAAK;EAC9D,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,IAAI,CAAC,+BAA+BH,MAAM,YAAY,EAAE;MACnFE;IACF,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAGD,OAAO,MAAMM,sBAAsB,GAAG,MAAOJ,MAAM,IAAK;EACtD,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,+BAA+BM,MAAM,kBAAkB,CAAC;EACzF,OAAOP,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}